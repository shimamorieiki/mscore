{"version":3,"sources":["actions/Score.js","components/YakuGridTile.js","components/YakuGrid.js","reducers/Score.js","components/FuGridTile.js","components/HoraGridTile.js","components/Hora.js","components/MentuGridTile.js","components/MentuGridColorBox.js","components/Mentu.js","components/JantoGridTile.js","components/Janto.js","components/MatiGridTile.js","components/Mati.js","components/FuGrid.js","components/TotalScore.js","components/Score.js","containers/Score.js","containers/Nav.js","components/Nav.js","components/Yaku.js","components/YakuList.js","containers/YakuList.js","components/Fu.js","components/FuList.js","containers/FuList.js","components/CulcTableRow.js","components/CulcTable.js","containers/CulcTable.js","components/HeaderAndNav.js","containers/HeaderAndNav.js","App.js","serviceWorker.js","createStore.js","index.js","reducers/index.js"],"names":["addHan","han","type","payload","addFu","fu","addYakus","yaku","removeYakus","jantoFu","janto","matiFu","mati","horaFu","hora","YakuGridTile","props","selected","counter","setState","bgc","setSelectedbgc","Number","num","color","store","dispatch","name","unselected","setbgc","state","this","disable","style","height","width","backgroundColor","disabled","centerRipple","onClick","React","Component","YakuGrid","getState","Score","yakus","length","some","value","container","spacing","item","xs","marginTop","ippatu","initialState","score","mentu1","mentu2","mentu3","mentu4","mentuSum","error","scoreReducer","action","concat","yaskus","splice","indexOf","Hora","mRon","menzen","mTumo","nRon","nTumo","change","newValue","undefined","mron","mtumo","nron","ntumo","bool","BottomNavigation","onChange","event","showLabels","BottomNavigationAction","label","icon","MentuGridTile","addcount","variant","count","MentuGridColorBox","add","console","log","textAlign","Mentu","cshun","cmko1","cmko2","cako1","cako2","cmkan1","cmkan2","cakan1","cakan2","dora","margin","marginBottom","maxWidth","maxHeight","padding","IconButton","aria-label","addDora","fontSize","subDora","Janto","Mati","FuGrid","TotalScore","culcBaseScore","Math","ceil","pow","Table","align","key","component","scope","showHanAndFu","map","ref","wrapper","sm","lg","connect","ownProps","addHu","path","push","List","button","primary","Yaku","Card","text","YakuList","Fu","setBgc","FuList","containerf","CulcTableRow","role","number","CulcTable","handleChange","selectionFollowsFocus","textColor","indicatorColor","id","aria-controls","hidden","aria-labelledby","paddingTop","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","edge","noWrap","SwipeableDrawer","anchor","paper","direction","Divider","App","HeaderAndNav","exact","Boolean","window","location","hostname","match","history","createBrowserHistory","preloadedState","reduxCreateStore","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","logger","thunk","configureStore","renderApp","ReactDOM","render","StrictMode","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fe910665.chunk.js","sourcesContent":["// {\n//     type: \"アクションの種類を一意に識別できる文字列またはシンボル\",\n//         payload: \"アクションの実行に必要な任意のデータ\",\n// }\n\nexport const addHan = (han) => ({\n    type: 'ADD_HAN',\n    payload: { han },\n});\n\nexport const addFu = (fu) => ({\n    type: 'ADD_FU',\n    payload: { fu },\n});\nexport const addYakus = (yaku) => ({\n    type: 'ADD_YAKUS',\n    payload: { yaku },\n});\n\nexport const removeYakus = (yaku) => ({\n    type: 'REMOVE_YAKUS',\n    payload: { yaku },\n});\n\nexport const jantoFu = (janto) => ({\n    type: 'SELECT_JANTO',\n    payload: { janto },\n});\n\nexport const matiFu = (mati) => ({\n    type: 'SELECT_MATI',\n    payload: { mati },\n});\n\nexport const horaFu = (hora) => ({\n    type: 'SELECT_HORA',\n    payload: { hora },\n});\n\nexport const mentuFu = (mentu1, mentu2, mentu3, mentu4) => ({\n    type: 'SELECT_MENTU',\n    payload: { mentu1, mentu2, mentu3, mentu4 },\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'material-ui/Button';\nimport { addHan, addYakus, removeYakus } from '../actions/Score';\nimport { store } from '../index'\n\nexport default class YakuGridTile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.counter = 0\n        this.state = { bgc: this.setbgc(Number(this.props.num)), color: this.color(Number(this.props.num)) }\n    }\n\n    componentDidUpdate() {\n        if (this.props.disable && this.state.color === \"#000000\") {\n            this.setState({ color: this.color(Number(this.props.num)) })\n        }\n    }\n\n    setbgc(num) {\n        if (this.props.disable) {\n            return \"#eeeeee\"\n        } else {\n            if (num === 1) {\n                return \"#eeeeee\"\n            } else if (num === 2) {\n                return \"#dddddd\"\n            } else if (num === 3) {\n                return \"#cccccc\"\n            } else if (num === 4) {\n                return \"#bbbbbb\"\n            } else if (num === 6) {\n                return \"#aaaaaa\"\n            } else if (num === 100) {\n                return \"#999999\"\n            } else {\n                return \"#8f8f8f\"\n            }\n        }\n    }\n\n    setSelectedbgc(num) {\n        if (num === 1) {\n            return \"#00b5de\"\n        } else if (num === 2) {\n            return \"#ec6c1f\"\n        } else if (num === 3) {\n            return \"#73a82d\"\n        } else if (num === 4) {\n            return \"#d01026\"\n        } else if (num === 6) {\n            return \"#2a6d39\"\n        } else if (num === 100) {\n            return \"#843a8e\"\n        } else {\n            return \"#b0941e\"\n        }\n    }\n\n    color() {\n        if (this.props.disable) {\n            return \"#999999\"\n        } else {\n            return \"#000000\"\n        }\n    }\n\n    selected = () => {\n        this.counter = this.counter + 1\n        this.setState({ bgc: this.setSelectedbgc(Number(this.props.num)), color: \"#ffffff\" });\n        store.dispatch(addYakus(this.props.name))\n        store.dispatch(addHan(this.props.num))\n    }\n\n    unselected = () => {\n        this.counter = this.counter + 1\n        this.setState({ bgc: this.setbgc(Number(this.props.num)), color: this.color(Number(this.props.num)) });\n        store.dispatch(removeYakus(this.props.name))\n        store.dispatch(addHan(-this.props.num))\n    }\n\n    render() {\n        return (\n            <div>\n                <Button style={{ height: '99%', width: \"99%\", backgroundColor: this.state.bgc, color: this.state.color }} disabled={this.props.disable} centerRipple=\"True\"\n                    onClick={(() => {\n                        if (this.counter % 2 === 0) {\n                            return this.selected;\n                        } else {\n                            return this.unselected;\n                        }\n                    })()}>{this.props.name}\n                </Button>\n            </div >\n\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport YakuGridTile from './YakuGridTile';\nimport { store } from '../index'\n\nexport default class YakuGrid extends React.Component {\n    ippatu() {\n        if (((store.getState()).Score.yakus).length !== 0) {\n            var result = (store.getState()).Score.yakus.some(function (value) {\n                return value === \"リーチ\";\n            });\n            if (result) {\n                var disable = false\n            } else {\n                disable = true\n            }\n        } else {\n            disable = true\n        }\n        return <YakuGridTile name=\"一発\" num=\"1\" disable={disable} />\n    }\n\n    yakuhai() {\n        if (((store.getState()).Score.yakus).length !== 0) {\n            var result = (store.getState()).Score.yakus.some(function (value) {\n                return value === \"役牌\";\n            });\n            if (result) {\n                return (\n                    <div>\n                        <YakuGridTile name=\"白\" num=\"1\" />\n                        <YakuGridTile name=\"発\" num=\"1\" />\n                        <YakuGridTile name=\"中\" num=\"1\" />\n                        <YakuGridTile name=\"自風牌\" num=\"1\" />\n                        <YakuGridTile name=\"場風牌\" num=\"1\" />\n                    </div>\n                )\n            } else {\n                return <div></div>\n            }\n\n        } else {\n            return <div></div>\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ height: '100%', width: \"100%\", backgroundColor: \"#ffffff\" }}>\n                <Grid container spacing={0} style={{ width: \"100%\", height: '99%' }}>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"リーチ\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}>{this.ippatu()}</Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"門前清自摸和\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"平和\" num='1' /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"白\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"発\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"中\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"自風牌\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"場風牌\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"断么九\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"一盃口\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"海底撈月\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"河底撈魚\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"嶺上開花\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"槍槓\" num=\"1\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"ダブル立直\" num=\"2\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"三色同順\" num=\"2\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"三色同刻\" num=\"2\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"三暗刻\" num=\"2\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"一気通貫\" num=\"2\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }}><YakuGridTile name=\"七対子\" num=\"2\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"対々和\" num=\"2\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"混全帯幺九\" num=\"2\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"三槓子\" num=\"2\" /></Grid>\n\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"二盃口\" num=\"3\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"純全帯公九\" num=\"3\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"混一色\" num=\"3\" /></Grid>\n\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"小三元\" num=\"4\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"混老頭\" num=\"4\" /></Grid>\n\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"清一色\" num=\"6\" /></Grid>\n\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"四暗刻\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"大三元\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"国士無双\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"緑一色\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"字一色\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"清老頭\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"四槓子\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"小四喜\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"九蓮宝燈\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"地和\" num=\"100\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"天和\" num=\"100\" /></Grid>\n\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"四暗刻単騎\" num=\"200\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"国士13面待ち\" num=\"200\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"純正九蓮宝燈\" num=\"200\" /></Grid>\n                    <Grid item xs={4} style={{ marginTop: \"1px\" }} > <YakuGridTile name=\"大四喜\" num=\"200\" /></Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","//Reducer は現在の state と Action から、新しい state を生成します。\n//Reducer は新しい state を生成してください。　前の state を変更してはいけません。\nconst initialState = {\n    han: 0,\n    fu: 0,\n    score: 0,\n    janto: 0,\n    mati: 0,\n    hora: 0,\n    mentu1: 0,\n    mentu2: 0,\n    mentu3: 0,\n    mentu4: 0,\n    mentuSum: 0,\n    yakus: [],\n    error: false\n};\n\n\n//Action はすべての Reducer に送られるため、関係のない Action の場合は現在の state を返してください。\nexport default function scoreReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'ADD_HAN':\n            return {\n                ...state,\n                han: Number(state.han) + Number(action.payload.han)\n            };\n        case 'ADD_FU':\n            return {\n                ...state,\n                fu: Number(state.fu) + Number(action.payload.fu)\n            };\n        case 'ADD_YAKUS':\n            return {\n                ...state,\n                yakus: state.yakus.concat(action.payload.yaku)\n            };\n        case 'REMOVE_YAKUS':\n            return {\n                ...state,\n                yaskus: state.yakus.splice(state.yakus.indexOf(action.payload.yaku), 1)\n            };\n        case 'SELECT_JANTO':\n            return {\n                ...state,\n                janto: action.payload.janto,\n                fu: Number(action.payload.janto) + Number(state.mati) +\n                    Number(state.hora) + Number(state.mentuSum)\n            };\n        case 'SELECT_MATI':\n            return {\n                ...state,\n                mati: action.payload.mati,\n                fu: Number(state.janto) + Number(action.payload.mati) +\n                    Number(state.hora) + Number(state.mentuSum)\n            };\n        case 'SELECT_HORA':\n            return {\n                ...state,\n                hora: action.payload.hora,\n                fu: Number(state.janto) + Number(state.mati) +\n                    Number(action.payload.hora) + Number(state.mentuSum)\n            };\n        case 'SELECT_MENTU':\n            return {\n                ...state,\n                mentu1: action.payload.mentu1,\n                mentu2: action.payload.mentu2,\n                mentu3: action.payload.mentu3,\n                mentu4: action.payload.mentu4,\n                mentuSum: Number(action.payload.mentu1) + Number(action.payload.mentu2) +\n                    Number(action.payload.mentu3) + Number(action.payload.mentu4),\n                fu: Number(state.janto) + Number(state.mati) + Number(state.hora) +\n                    Number(action.payload.mentu1) + Number(action.payload.mentu2) +\n                    Number(action.payload.mentu3) + Number(action.payload.mentu4)\n            };\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport { createStore } from 'redux'\nimport scoreReducer from '../reducers/Score'\nimport { addFu } from '../actions/Score';\nimport { store } from '../index'\n\nexport default class FuGridTile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.counter = 0\n        this.state = { backgroundColor: \"#fff0ff\" }\n    }\n\n    selected = () => {\n        this.counter = this.counter + 1\n        // setStateを使うときは自分が変化させたいものだけ\n        // this.stateに入れておけばsetStateを使うことで実現できる\n        this.setState({ backgroundColor: \"#ff77ff\" });\n        store.dispatch(addFu(this.props.fu))\n        console.log(this.props.fu);\n    }\n\n    unselected = () => {\n        this.counter = this.counter + 1\n        this.setState({ backgroundColor: \"#fff0ff\" });\n        store.dispatch(addFu(-this.props.fu))\n    }\n\n    render() {\n        return (\n            <div>\n                <GridListTile key={this.props.name} cols=\"\" style={{ color: '#001100', backgroundColor: \"#ffeeff\", listStyle: \"none\" }}>\n                    <Button style={{ height: '100%', width: \"100%\", backgroundColor: this.state.backgroundColor }} centerRipple=\"True\"\n                        onClick={(() => {\n                            if (this.counter % 2 === 0) {\n                                return this.selected;\n                            } else {\n                                return this.unselected;\n                            }\n                        })()}>{this.props.name}</Button>\n                </GridListTile>\n            </div >);\n    }\n}","import React from 'react';\nimport PropTypes, { bool } from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport { createStore } from 'redux'\nimport scoreReducer from '../reducers/Score'\nimport { addFu } from '../actions/Score';\nimport { store } from '../index'\n\nexport default class HoraGridTile extends React.Component {\n\n    render() {\n\n        return (\n            <div>\n                <GridListTile key={this.props.name} cols=\"\" style={{ color: '#001100', backgroundColor: \"#ffeeff\", listStyle: \"none\" }}>\n                    <Button style={{ height: '100%', width: \"100%\", backgroundColor: this.props.bgc }} centerRipple=\"True\"\n                        onClick={() => { this.props.selected(); }}>{this.props.name}</Button>\n                </GridListTile>\n            </div >);\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport ButtonGroup from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel, List } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport HoraGridTile from './HoraGridTile'\nimport { store } from '../index'\nimport { horaFu } from '../actions/Score'\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport DoneIcon from '@material-ui/icons/Done';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\n\nexport default class Hora extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { menzen: undefined, mron: false, mtumo: false, nron: false, ntumo: false, value: 0 }\n        store.dispatch(horaFu(10))\n    }\n\n    bgc(bool) {\n        if (bool) {\n            return \"#ffff0f\"\n        } else {\n            return \"#eeffff\"\n        }\n    }\n\n    mRon = () => {\n        this.setState({ menzen: true, value: 0 });\n        store.dispatch(horaFu(10))\n    }\n\n    mTumo = () => {\n        this.setState({ menzen: true, value: 1 });\n        store.dispatch(horaFu(2))\n    }\n\n    nRon = () => {\n        this.setState({ menzen: false, value: 2 });\n        store.dispatch(horaFu(0))\n    }\n\n    nTumo = () => {\n        this.setState({ menzen: false, value: 3 });\n        store.dispatch(horaFu(2))\n    }\n\n    change = (newValue) => {\n        if (newValue === 0) {\n            this.mRon();\n        } else if (newValue === 1) {\n            this.mTumo();\n        } else if (newValue === 2) {\n            this.nRon();\n        } else if (newValue === 3) {\n            this.nTumo();\n        }\n    }\n\n    render() {\n        // 面子の種類以外は一つ選ぶと他が選べない\n        // 面子の種類は複数選ぶことができるが全体で5つ以上は選べない\n\n        return (\n            <BottomNavigation\n                style={{ backgroundColor: \"inherit\" }}\n                value={this.state.value}\n                onChange={(event, newValue) => {\n                    this.change(newValue)\n                }}\n\n                showLabels\n            >\n                <BottomNavigationAction label=\"面前/ロン\" icon={<SupervisorAccountIcon />} />\n                <BottomNavigationAction label=\"面前/ツモ\" icon={<PanToolIcon />} color=\"primary\" />\n                <BottomNavigationAction label=\"鳴き/ロン\" icon={<SupervisorAccountIcon />} />\n                <BottomNavigationAction label=\"鳴き/ツモ\" color=\"secondary\" icon={<PanToolIcon />} />\n            </BottomNavigation>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport { createStore } from 'redux'\nimport scoreReducer from '../reducers/Score'\nimport { addFu } from '../actions/Score';\nimport { store } from '../index'\n\nexport default class MentuGridTile extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // this.state = { bgc: this.setbgc() }\n    // }\n\n    selected = () => {\n        // setStateを使うときは自分が変化させたいものだけ\n        // this.stateに入れておけばsetStateを使うことで実現できる\n        this.props.addcount();\n        // console.log(\"this.props.count add\", this.props.count);\n        // this.setState({ bgc: this.setbgc() })\n        store.dispatch(addFu(this.props.fu))\n    }\n\n    unselected = () => {\n        this.props.addcount();\n        // console.log(\"this.props.count remove\", this.props.count);\n        // this.setState({ bgc: this.setbgc() })\n        store.dispatch(addFu(-Number(this.props.fu) * 4))\n    }\n\n    // setbgc = () => {\n    //     console.log(this.props.count);\n    //     // if ((Number(this.props.count)) % 5 !== 0) {\n    //     //     return \"#ffffaa\" //disSeleced\n    //     // } else {\n    //     //     return \"#2feeff\"//selected\n    //     // }\n    // }\n\n    render() {\n        return (\n            <Button variant=\"contained\" color={this.props.color} style={{ height: '100%', width: \"100%\" }} centerRipple=\"True\"\n                onClick={(() => {\n                    if ((Number(this.props.count) + 1) % 5 !== 0) {\n                        return this.selected;\n                    } else {\n                        return this.unselected;\n                    }\n                })()\n                } > { this.props.name}</ Button>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport ButtonGroup from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel, List } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport MentuGridTile from './MentuGridTile'\n\nexport default class MentuGridColorBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { count: this.props.count }\n    }\n\n    add = () => {\n        this.setState({ count: Number(this.state.count) + 1 })\n        console.log(\"this.color.box\", this.state.count);\n    }\n\n    setbgc = (num) => {\n        if (num % 5 > this.state.count % 5) {\n            return \"inherit\"\n        } else {\n            return \"#aaaaaa\"\n        }\n    }\n\n\n\n    render() {\n        // 面子の種類以外は一つ選ぶと他が選べない\n        // 面子の種類は複数選ぶことができるが全体で5つ以上は選べない\n\n        return (\n            <Grid container >\n                <Grid item xs={6} style={{ width: \"100%\" }}>\n                    <MentuGridTile color={this.props.color} name={this.props.name} fu={this.props.fu} count={this.state.count} addcount={() => { this.add(); }} />\n                </Grid>\n                <Grid item xs={6} style={{ width: \"100%\", marginTop: \"2.5%\", height: \"60%\" }}>\n                    <Grid container style={{ width: \"100%\", height: \"60%\" }}>\n                        <Grid item xs={3} style={{ width: \"90%\", height: \"90%\", backgroundColor: this.setbgc(1), textAlign: \"center\" }}>1</Grid>\n                        <Grid item xs={3} style={{ width: \"100%\", height: \"100%\", backgroundColor: this.setbgc(2), textAlign: \"center\" }}>2</Grid>\n                        <Grid item xs={3} style={{ width: \"100%\", height: \"100%\", backgroundColor: this.setbgc(3) }}>3</Grid>\n                        <Grid item xs={3} style={{ width: \"100%\", height: \"100%\", backgroundColor: this.setbgc(4) }}>4</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport ButtonGroup from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel, List } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport MentuGridTile from './MentuGridTile'\nimport MentuGridColorBox from './MentuGridColorBox';\nimport { store } from '../index';\nimport { addHan } from '../actions/Score';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport default class Mentu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { cshun: 0, cmko1: 0, cmko2: 0, cako1: 0, cako2: 0, cmkan1: 0, cmkan2: 0, cakan1: 0, cakan2: 0, dora: 0 }\n    }\n\n    addDora() {\n        this.setState({ dora: this.state.dora + 1 })\n        store.dispatch(addHan(1))\n    }\n\n    subDora() {\n        if (this.state.dora >= 1) {\n            this.setState({ dora: this.state.dora - 1 })\n            store.dispatch(addHan(-1))\n        }\n    }\n\n    render() {\n        // 面子の種類以外は一つ選ぶと他が選べない\n        // 面子の種類は複数選ぶことができるが全体で5つ以上は選べない\n\n        return (\n            <div style={{ margin: \"2%\" }}>\n                <Grid container style={{ width: \"100%\", height: \"100%\", marginTop: \"1%\", marginBottom: \"1%\" }}>\n                    <Grid item xs={3}></Grid>\n                    <Grid item xs={6}>\n                        <Grid container>\n                            <Grid item xs={6} style={{ maxWidth: \"100%\", maxHeight: \"100%\", backgroundColor: \"#cccccc\" }}><div style={{ textAlign: \"center\" }} >ドラ{this.state.dora}</div></Grid>\n                            <Grid item xs={3} style={{ margin: 0, padding: 0 }}>\n                                <IconButton variant=\"contained\" aria-label=\"add\" color=\"primary\" onClick={() => this.addDora()}>\n                                    <AddIcon fontSize=\"medium\" />\n                                </IconButton>\n                            </Grid>\n                            <Grid item xs={3} style={{ margin: 0, padding: 0 }} onClick={() => this.subDora()}>\n                                <IconButton aria-label=\"remove\" >\n                                    <RemoveIcon fontSize=\"medium\" color=\"primary\" variant=\"outlined\" />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={3}></Grid>\n                </Grid>\n\n                <Grid container style={{ marginTop: \"1%\", marginBottom: \"1%\" }} >\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"順子\" fu=\"0\" count={this.state.cshun} color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container style={{ width: \"100%\", height: \"100%\", marginTop: \"1%\", marginBottom: \"1%\" }}>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={4} style={{ backgroundColor: \"#cccccc\", textAlign: \"center\" }}><span>2~8</span></Grid>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={4} style={{ backgroundColor: \"#cccccc\", textAlign: \"center\" }}><span>1.9.字</span></Grid>\n                    <Grid item xs={1}></Grid>\n                </Grid>\n                <Grid container style={{ width: \"100%\", height: \"100%\", marginTop: \"1%\", marginBottom: \"1%\" }}>\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"明刻\" fu=\"2\" count={this.state.cmko1} color=\"primary\" />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"明刻\" fu=\"4\" count={this.state.cmko2} color=\"secondary\" />\n                    </Grid>\n                </Grid>\n\n                <Grid container style={{ width: \"100%\", height: \"100%\", marginTop: \"1%\", marginBottom: \"1%\" }}>\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"暗刻\" fu=\"8\" count={this.state.cako1} color=\"primary\" />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"暗刻\" fu=\"16\" count={this.state.cako2} color=\"secondary\" />\n                    </Grid>\n                </Grid>\n\n                <Grid container style={{ width: \"100%\", height: \"100%\", marginTop: \"1%\", marginBottom: \"1%\" }}>\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"明槓\" fu=\"4\" count={this.state.cmkan1} color=\"primary\" />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"明槓\" fu=\"8\" count={this.state.cmkan2} color=\"secondary\" />\n                    </Grid>\n                </Grid>\n\n                <Grid container style={{ width: \"100%\", height: \"100%\", marginTop: \"1%\", marginBottom: \"1%\" }}>\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"暗槓\" fu=\"16\" count={this.state.cakan1} color=\"primary\" />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <MentuGridColorBox name=\"暗槓\" fu=\"32\" count={this.state.cakan2} color=\"secondary\" />\n                    </Grid>\n                </Grid>\n            </div >\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes, { bool } from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport { createStore } from 'redux'\nimport scoreReducer from '../reducers/Score'\nimport { addFu } from '../actions/Score';\nimport { store } from '../index'\n\nexport default class JantoGridTile extends React.Component {\n\n    render() {\n\n        return (\n            <div>\n                <GridListTile key={this.props.name} cols=\"\" style={{ color: '#001100', backgroundColor: \"#ffeeff\", listStyle: \"none\" }}>\n                    <Button style={{ height: '100%', width: \"100%\", backgroundColor: this.props.bgc }} centerRipple=\"True\"\n                        onClick={() => { this.props.selected(); }}>{this.props.name}</Button>\n                </GridListTile>\n            </div >);\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport ButtonGroup from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel, List } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport JantoGridTile from './JantoGridTile'\nimport { store } from '../index'\nimport { jantoFu } from '../actions/Score'\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport DoneIcon from '@material-ui/icons/Done';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\nimport CropDinIcon from '@material-ui/icons/CropDin';\nimport LayersIcon from '@material-ui/icons/Layers';\n\n\nexport default class Janto extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: 0 }\n        // this.state = { num: false, ota: false, jifu: false, bafu: false, san: false, value: 0 }\n    }\n\n    // Num = () => {\n    //     this.setState({ num: true, ota: false, jifu: false, bafu: false, san: false });\n    //     store.dispatch(jantoFu(0))\n\n    // }\n    // Ota = () => {\n    //     this.setState({ num: false, ota: true, jifu: false, bafu: false, san: false });\n    //     store.dispatch(jantoFu(0))\n    // }\n    // Jifu = () => {\n    //     this.setState({ num: false, ota: false, jifu: true, bafu: false, san: false });\n    //     store.dispatch(jantoFu(2))\n    // }\n    // Bafu = () => {\n    //     this.setState({ num: false, ota: false, jifu: false, bafu: true, san: false });\n    //     store.dispatch(jantoFu(2))\n    // }\n    // San = () => {\n    //     this.setState({ num: false, ota: false, jifu: false, bafu: false, san: true });\n    //     store.dispatch(jantoFu(2))\n    //     console.log(store.getState().Score);\n    // }\n\n    bgc(bool) {\n        if (bool) {\n            return \"#ffff0f\"\n        } else {\n            return \"#eeffff\"\n        }\n    }\n\n    change = (newValue) => {\n        if (newValue === 0) {\n            store.dispatch(jantoFu(0))\n            this.setState({ value: newValue });\n        } else if (newValue === 1) {\n            store.dispatch(jantoFu(0))\n            this.setState({ value: newValue });\n        } else if (newValue === 2) {\n            store.dispatch(jantoFu(2))\n            this.setState({ value: newValue });\n        }\n    }\n\n\n\n    render() {\n        // 面子の種類以外は一つ選ぶと他が選べない\n        // 面子の種類は複数選ぶことができるが全体で5つ以上は選べない\n\n        return (\n            <BottomNavigation\n                style={{ backgroundColor: \"inherit\" }}\n                value={this.state.value}\n                onChange={(event, newValue) => {\n                    this.change(newValue)\n                }}\n\n                showLabels\n            >\n                <BottomNavigationAction label=\"数牌\" icon={<LooksOneIcon />} />\n                <BottomNavigationAction label=\"オタ風牌\" icon={<CropDinIcon />} color=\"primary\" />\n                <BottomNavigationAction label=\"役牌\" icon={<LayersIcon />} />\n            </BottomNavigation>\n            // <Grid container spacing={10} style={{ margin: \"2%\" }}>\n            //     <JantoGridTile name=\"数牌\" isSelect={this.state.num} selected={() => { this.Num(); }} bgc={this.bgc(this.state.num)} />\n            //     <JantoGridTile name=\"オタ風牌\" isSelect={this.state.ota} selected={() => { this.Ota(); }} bgc={this.bgc(this.state.ota)} />\n            //     <JantoGridTile name=\"自風牌\" isSelect={this.state.jifu} selected={() => { this.Jifu(); }} bgc={this.bgc(this.state.jifu)} />\n            //     <JantoGridTile name=\"場風牌\" isSelect={this.state.bafu} selected={() => { this.Bafu(); }} bgc={this.bgc(this.state.bafu)} />\n            //     <JantoGridTile name=\"三元牌\" isSelect={this.state.san} selected={() => { this.San(); }} bgc={this.bgc(this.state.san)} />\n            // </Grid>\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport { createStore } from 'redux'\nimport scoreReducer from '../reducers/Score'\nimport { addFu } from '../actions/Score';\nimport { store } from '../index'\n\nexport default class MatiGridTile extends React.Component {\n    bgc(bool) {\n        if (bool) {\n            return \"#ffff0f\"\n        } else {\n            return \"#eeffff\"\n        }\n    }\n\n    render() {\n        return (\n            <Button style={{ height: '100%', width: \"100%\", marginTop: \"0\", backgroundColor: this.bgc(this.props.isSelect) }} centerRipple=\"True\"\n                onClick={() => { this.props.selected(); }}>\n                {this.props.name}\n            </Button>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport ButtonGroup from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel, List } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport MatiGridTile from './MatiGridTile'\nimport { store } from '../index'\nimport { matiFu } from '../actions/Score'\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport DoneIcon from '@material-ui/icons/Done';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport ReportIcon from '@material-ui/icons/Report';\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\n\nexport default class Mati extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: 0 }\n        // this.state = { ryan: false, shan: false, pen: false, kan: false, tan: false, nobe: false, tamen: false, value: 0 }\n    }\n\n    // Ryan = () => {\n    //     this.setState({ ryan: true, shan: false, pen: false, kan: false, tan: false, nobe: false, tamen: false });\n    //     store.dispatch(matiFu(0))\n    // }\n\n    // Shan = () => {\n    //     this.setState({ ryan: false, shan: true, pen: false, kan: false, tan: false, nobe: false, tamen: false });\n    //     store.dispatch(matiFu(2))\n    // }\n\n    // Pen = () => {\n    //     this.setState({ ryan: false, shan: false, pen: true, kan: false, tan: false, nobe: false, tamen: false });\n    //     store.dispatch(matiFu(2))\n    // }\n\n    // Kan = () => {\n    //     this.setState({ ryan: false, shan: false, pen: false, kan: true, tan: false, nobe: false, tamen: false });\n    //     store.dispatch(matiFu(2))\n    // }\n\n    // Tan = () => {\n    //     this.setState({ ryan: false, shan: false, pen: false, kan: false, tan: true, nobe: false, tamen: false });\n    //     store.dispatch(matiFu(2))\n    // }\n    // Nobe = () => {\n    //     this.setState({ ryan: false, shan: false, pen: false, kan: false, tan: false, nobe: true, tamen: false });\n    //     store.dispatch(matiFu(2))\n    // }\n\n    // Tamen = () => {\n    //     this.setState({ ryan: false, shan: false, pen: false, kan: false, tan: false, nobe: false, tamen: true });\n    //     // store.dispatch(matiFu(2))\n    // }\n\n    change = (newValue) => {\n        if (newValue === 0) {\n            store.dispatch(matiFu(0))\n            this.setState({ value: newValue });\n        } else if (newValue === 1) {\n            store.dispatch(matiFu(2))\n            this.setState({ value: newValue });\n        }\n    }\n\n    render() {\n\n        return (\n            <BottomNavigation\n                style={{ backgroundColor: \"inherit\" }}\n                value={this.state.value}\n                onChange={(event, newValue) => {\n                    this.change(newValue)\n                }}\n\n                showLabels\n            >\n                <BottomNavigationAction label=\"両面\" icon={<SwapHorizIcon />} style={{ backgroundColor: \"00ffff\" }} />\n                <BottomNavigationAction label=\"それ以外\" icon={<ReportIcon />} />\n            </BottomNavigation>\n            // <Grid container spacing={3} style={{ margin: \"2%\" }}>\n            //     <Grid item xs={4} lg={4} style={{ width: \"100%\" }}><MatiGridTile name=\"両面待ち\" isSelect={this.state.ryan} selected={() => { this.Ryan(); }} /></Grid>\n            //     <Grid item xs={4} lg={4} style={{ width: \"100%\" }}><MatiGridTile name=\"シャンポン待ち\" isSelect={this.state.shan} selected={() => { this.Shan(); }} /></Grid>\n            //     <Grid item xs={4} lg={4} style={{ width: \"100%\" }}><MatiGridTile name=\"ペンチャン待ち\" isSelect={this.state.pen} selected={() => { this.Pen(); }} /></Grid>\n            //     <Grid item xs={4} lg={4} style={{ width: \"100%\" }}><MatiGridTile name=\"カンチャン待ち\" isSelect={this.state.kan} selected={() => { this.Kan(); }} /></Grid>\n            //     <Grid item xs={4} lg={4}><MatiGridTile name=\"単騎待ち\" isSelect={this.state.tan} selected={() => { this.Tan(); }} /></Grid>\n            //     <Grid item xs={4} lg={4}><MatiGridTile name=\"ノベタン\" isSelect={this.state.nobe} selected={() => { this.Nobe(); }} /></Grid>\n            //     <Grid item xs={4} lg={4}><MatiGridTile name=\"多面待ち\" isSelect={this.state.tamen} selected={() => { this.Tamen(); }} /></Grid>\n            //     {/* 多面待ちの時は両面以外に解釈できるかを追加で出す */}\n            //     {(() => {\n            //         if (this.state.tamen) {\n            //             return (\n            //                 <div>\n            //                     <p>this is tamenmati</p>\n            //                     <p>select next idea</p>\n            //                 </div>\n            //             )\n            //         }\n            //     })()}\n            // </Grid>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport ButtonGroup from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel, List } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport FuGridTile from './FuGridTile'\nimport Hora from './Hora'\nimport { store } from '../index';\n// import { addFu } from '../actions/Score'\nimport Mentu from './Mentu'\nimport Janto from './Janto';\nimport Mati from './Mati'\nimport { horaFu, mentuFu, jantoFu, matiFu } from '../actions/Score';\n\nexport default class FuGrid extends React.Component {\n\n    // hora() {\n    //     var result = (store.getState()).Score.yakus.some(function (value) {\n    //         return value === \"門前清自摸和\" || value === \"海底撈月\" || value === \"嶺上開花\"\n    //     });\n    //     if (!result) {\n    //         if (store.getState().Score.hora !== 0) {\n    //             store.dispatch(horaFu(0))\n    //         }\n    //         return (\n    //             <div style={{ width: \"100%\", height: \"100%\" }}>\n    //                 <Typograpy type=\"headline\">アガり方</Typograpy>\n    //                 <Hora />\n    //             </div>\n    //         )\n    //     } else {\n    //         if (store.getState().Score.hora !== 2) {\n    //             store.dispatch(horaFu(2))\n    //         }\n    //     }\n    // }\n\n    // mentu() {\n    //     var result = (store.getState()).Score.yakus.some(function (value) {\n    //         return value === \"二盃口\";\n    //     });\n    //     if (!result) {\n    //         return (\n    //             <div style={{ width: \"100%\", height: \"100%\" }}>\n    //                 <Typograpy type=\"headline\">面子の種類</Typograpy>\n    //                 <Mentu />\n    //             </div>\n    //         )\n    //     } else {\n    //         console.log(store.getState().Score.mentuSum);\n    //         if (store.getState().Score.mentuSum !== 0) {\n    //             store.dispatch(mentuFu(0, 0, 0, 0))\n    //         }\n    //     }\n    // }\n    // janto() {\n    //     var result = (store.getState()).Score.yakus.some(function (value) {\n    //         return value === \"断么九\" || value === \"純全帯公九\";\n    //     });\n    //     if (!result) {\n    //         return (\n    //             <div style={{ width: \"100%\", height: \"100%\" }}>\n    //                 <Typograpy type=\"headline\">雀頭の牌の種類</Typograpy>\n    //                 <Janto />\n    //             </div>\n    //         )\n    //     } else {\n    //         if (store.getState().Score.janto !== 0) {\n    //             store.dispatch(jantoFu(0))\n    //         }\n    //     }\n    // }\n\n    // mati() {\n    //     var result = (store.getState()).Score.yakus.some(function (value) {\n    //         return value === \"平和\";\n    //     });\n    //     if (!result) {\n    //         return (\n    //             <div style={{ width: \"100%\", height: \"100%\" }}>\n    //                 <Typograpy type=\"headline\">待ち形の種類</Typograpy>\n    //                 <Mati />\n    //             </div>\n    //         )\n    //     } else {\n    //         if (store.getState().Score.hora !== 0) {\n    //             store.dispatch(matiFu(0))\n    //         }\n    //     }\n    // }\n\n    render() {\n\n        return (\n            <div>\n                {/* <Typograpy type=\"headline\">アガり方</Typograpy> */}\n                <Hora />\n\n                {/* <Typograpy type=\"headline\">面子の種類</Typograpy> */}\n                <Mentu />\n\n                {/* <Typograpy type=\"headline\">雀頭の牌の種類</Typograpy> */}\n                <Janto />\n\n                {/* <Typograpy type=\"headline\">待ち形の種類</Typograpy> */}\n                <Mati />\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport { createStore } from 'redux'\nimport scoreReducer from '../reducers/Score'\nimport { addFu } from '../actions/Score';\nimport { store } from '../index'\nimport Table, { TableBody, TableRow, TableHead, TableRowColumn, TableHeaderColumn, TableCell } from 'material-ui/Table';\nimport { Paper } from 'material-ui/Paper'\n\n\nexport default class TotalScore extends React.Component {\n\n    culcBaseScore = () => {\n        var han = Number((store.getState()).Score.han);\n        var fu = Math.ceil(Number((store.getState()).Score.fu) / 10) * 10;\n        if (han >= 600) {\n            return 32000 * 6 / 4\n        } else if (han >= 500) {\n            return 32000 * 5 / 4\n        } else if (han >= 400) {\n            return 32000 * 4 / 4\n        } else if (han >= 300) {\n            return 32000 * 3 / 4\n        } else if (han >= 200) {\n            return 32000 * 2 / 4\n        } else if (han >= 100) {\n            return 32000 * 1 / 4\n        } else if (han >= 13) {\n            return 32000 * 1 / 4\n        } else if (han >= 11) {\n            return 24000 * 1 / 4\n        } else if (han >= 8) {\n            return 16000 * 1 / 4\n        } else if (han >= 6) {\n            return 12000 * 1 / 4\n        } else if (han >= 5) {\n            return 8000 * 1 / 4\n        } else {\n            var result = (store.getState()).Score.yakus.some(function (value) {\n                return value === \"七対子\";\n            });\n            if (result) {\n                fu = 25\n            }\n            return fu * Math.pow(2, han + 2)\n        }\n    }\n    table() {\n        return (\n            <Table aria-label=\"simple table\" style={{ backgroundColor: \"#ffffff\", height: \"100%\" }}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\\</TableCell>\n                        <TableCell align=\"right\">ロン</TableCell>\n                        <TableCell align=\"right\">ツモ</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow key=\"1\">\n                        <TableCell component=\"th\" scope=\"row\">子</TableCell>\n                        <TableCell align=\"right\">\n                            {Math.ceil(this.culcBaseScore() * 4 / 100) * 100}点\n                        </TableCell>\n                        <TableCell align=\"right\">\n                            親 {Math.ceil(this.culcBaseScore() * 2 / 100) * 100}点<br />\n                            子 {Math.ceil(this.culcBaseScore() * 1 / 100) * 100}点\n                        </TableCell>\n                    </TableRow>\n                    <TableRow key=\"2\">\n                        <TableCell component=\"th\" scope=\"row\">親</TableCell>\n                        <TableCell align=\"right\">\n                            {Math.ceil(this.culcBaseScore() * 6 / 100) * 100}点\n                        </TableCell>\n                        <TableCell align=\"right\">\n                            {Math.ceil(this.culcBaseScore() * 2 / 100) * 100}点\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        )\n    }\n\n    render() {\n        return (\n\n            <div>\n                <h3>支払い</h3>\n                <Table aria-label=\"simple table\" style={{ backgroundColor: \"#ffffff\", height: \"100%\" }}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\\</TableCell>\n                            <TableCell align=\"right\">ロン</TableCell>\n                            <TableCell align=\"right\">ツモ</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow key=\"1\">\n                            <TableCell component=\"th\" scope=\"row\">子</TableCell>\n                            <TableCell align=\"right\">\n                                {Math.ceil(this.culcBaseScore() * 4 / 100) * 100}点\n                        </TableCell>\n                            <TableCell align=\"right\">\n                                親 {Math.ceil(this.culcBaseScore() * 2 / 100) * 100}点<br />\n                            子 {Math.ceil(this.culcBaseScore() * 1 / 100) * 100}点\n                        </TableCell>\n                        </TableRow>\n                        <TableRow key=\"2\">\n                            <TableCell component=\"th\" scope=\"row\">親</TableCell>\n                            <TableCell align=\"right\">\n                                {Math.ceil(this.culcBaseScore() * 6 / 100) * 100}点\n                        </TableCell>\n                            <TableCell align=\"right\">\n                                {Math.ceil(this.culcBaseScore() * 2 / 100) * 100}点\n                        </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel, List, ListItem } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport YakuGrid from './YakuGrid';\nimport { store } from '../index';\nimport FuGrid from './FuGrid';\nimport TotalScore from './TotalScore';\n// import { addFu } from '../actions/Score'\n\nexport default class Score extends React.Component {\n\n    // componentWillUnmount() {\n    //     this.props.onMount(this.props);\n    // }\n\n    // componentWillReceiveProps(nextProps) {\n    //     if (this.props.categoryId !== nextProps.categoryId) {\n    //         this.props.onUpdate(nextProps.categoryId);\n    //     }\n    // }\n\n    showHanAndFu = () => {\n        const han = Number((store.getState()).Score.han)\n        const fu = Number((store.getState()).Score.fu)\n\n        if (han >= 600) {\n            return \"six\"\n        } else if (han >= 500) {\n            return \"six\"\n        } else if (han >= 400) {\n            return \"six\"\n        } else if (han >= 300) {\n            return \"six\"\n        } else if (han >= 200) {\n            return \"six\"\n        } else if (han >= 100) {\n            return \"six\"\n        } else if (han >= 13) {\n            return \"six\"\n        } else if (han >= 11) {\n            return \"six\"\n        } else if (han >= 8) {\n            return \"six\"\n        } else if (han >= 6) {\n            return \"six\"\n        } else if (han >= 5) {\n            return \"six\"\n        } else if (han >= 4) {\n            if (fu >= 40) {\n                return \"six\"\n            } else {\n                return (han + \"+\" + fu)\n            }\n        } else if (han >= 3) {\n            if (fu >= 70) {\n                return \"six\"\n            } else {\n                return (han + \"+\" + fu)\n            }\n        } else {\n            return (han + \"+\" + fu)\n        }\n    }\n\n\n\n\n\n    render() {\n        const listItem = (store.getState()).Score.yakus.map((yaku) =>\n            <ListItem>{yaku}</ListItem>\n        );\n        return (\n            <div ref={this.wrapper}>\n                <Typography><h2>得点計算</h2></Typography>\n                <div>\n\n                    {/* 役が一つ選択されたときに同時に成立し得ない役は非表示になる */}\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6} lg={4}>\n                            <YakuGrid />\n                        </Grid>\n                        <Grid item xs={12} sm={6} lg={4}>\n                            <FuGrid />\n                        </Grid>\n                        <Grid item xs={12} sm={12} lg={4}>\n                            {/* <List>{listItem}</List> */}\n                            <p>{this.showHanAndFu()}</p>\n                            {/* <p>{(store.getState()).Score.fu}符</p> */}\n                            {(() => {\n                                if ((store.getState()).Score.fu >= 20 && (store.getState()).Score.han >= 1) {\n                                    return <TotalScore />\n                                } else if ((store.getState()).Score.fu < 20) {\n                                    return <p>calc fu</p>\n                                } else if ((store.getState()).Score.han < 1) {\n                                    return <p>calc han</p>\n                                } else {\n                                    return <p>calc both han and fu</p>\n                                }\n                            })()}\n                        </Grid>\n                    </Grid>\n                </div>\n            </div >\n        );\n    }\n\n}","import { connect } from 'react-redux';\nimport Score from '../components/Score';\nimport { addHan, addFu, addYakus, removeYakus, jantoFu, matiFu, horaFu } from '../actions/Score';\n\nconst mapStateToProps = (state, ownProps) => ({\n    han: state.Score.han,\n    fu: state.Score.fu,\n    janto: state.Score.janto,\n    mati: state.Score.mati,\n    hora: state.Score.hora,\n    score: state.Score.score,\n    error: state.Score.error,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addHan(han) { dispatch(addHan({ han })); },\n    addHu(fu) { dispatch(addFu({ fu })); },\n    addYakus(yaku) { dispatch(addYakus({ yaku })); },\n    removeYakus(yaku) { dispatch(removeYakus({ yaku })); },\n    jantoFu(janto) { dispatch(jantoFu({ janto })); },\n    matiFu(mati) { dispatch(matiFu({ mati })); },\n    horaFu(hora) { dispatch(horaFu({ hora })); }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Score);","import { connect } from 'react-redux';\nimport Nav from '../components/Nav';\nimport { push } from 'connected-react-router'\n\nconst mapStateToProp = state => ({\n    // categories: state.shopping.categories\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onClick(path) {\n        dispatch(push(path));\n    }\n})\nexport default connect(mapStateToProp, mapDispatchToProps)(Nav);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Drawer from 'material-ui/Drawer';\nimport List, { ListItem, ListItemText } from 'material-ui/List';\n\n\nexport default function Nav({ onClick }) {\n\n    return (\n        <div>\n            <List style={{ width: 240 }}>\n                <ListItem\n                    button\n                    key={'点数計算'}\n                    onClick={() => onClick(\"/\")}\n                >\n                    <ListItemText primary={'点数計算'} />\n                </ListItem>\n                <ListItem\n                    button\n                    key={'役一覧'}\n                    onClick={() => onClick(\"/yaku\")}\n                >\n                    <ListItemText primary={'役一覧'} />\n                </ListItem>\n                <ListItem\n                    button\n                    key={'符計算一覧'}\n                    onClick={() => onClick(\"/fu\")}\n                >\n                    <ListItemText primary={'符計算一覧'} />\n                </ListItem>\n                <ListItem\n                    button\n                    key={'計算表'}\n                    onClick={() => onClick(\"/scoretable\")}\n                >\n                    <ListItemText primary={'計算表'} />\n                </ListItem>\n            </List>\n        </div>\n    );\n\n}\n\nNav.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import Drawer from 'material-ui/Drawer';\n// import List, { ListItem, ListItemText } from 'material-ui/List';\n\n\n// export default function Nav({ onClick }) {\n\n//     return (\n//         <div>\n//             <Drawer type='permanent'>\n//                 <List style={{ width: 240 }}>\n//                     <ListItem\n//                         button\n//                         key={'点数計算'}\n//                         onClick={() => onClick(\"/score\")}\n//                     >\n//                         <ListItemText primary={'点数計算'} />\n//                     </ListItem>\n//                     <ListItem\n//                         button\n//                         key={'役一覧'}\n//                         onClick={() => onClick(\"/yaku\")}\n//                     >\n//                         <ListItemText primary={'役一覧'} />\n//                     </ListItem>\n//                     <ListItem\n//                         button\n//                         key={'符計算一覧'}\n//                         onClick={() => onClick(\"/hu\")}\n//                     >\n//                         <ListItemText primary={'符計算一覧'} />\n//                     </ListItem>\n//                     <ListItem\n//                         button\n//                         key={'計算表'}\n//                         onClick={() => onClick(\"/scoretable\")}\n//                     >\n//                         <ListItemText primary={'計算表'} />\n//                     </ListItem>\n//                 </List>\n//             </Drawer>\n//         </div>\n//     );\n\n// }\n\n// Nav.propTypes = {\n//     onClick: PropTypes.func.isRequired\n// };\n\n\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import Drawer from 'material-ui/Drawer';\n// import List, { ListItem, ListItemText } from 'material-ui/List';\n\n\n// export default function Nav({ onClick }) {\n\n//     return (\n//         <div>\n//             <Drawer type='permanent'>\n//                 <List style={{ width: 240 }}>\n//                     <ListItem\n//                         button\n//                         key={'点数計算'}\n//                         onClick={() => onClick(\"/score\")}\n//                     >\n//                         <ListItemText primary={'点数計算'} />\n//                     </ListItem>\n//                     <ListItem\n//                         button\n//                         key={'役一覧'}\n//                         onClick={() => onClick(\"/yaku\")}\n//                     >\n//                         <ListItemText primary={'役一覧'} />\n//                     </ListItem>\n//                     <ListItem\n//                         button\n//                         key={'符計算一覧'}\n//                         onClick={() => onClick(\"/hu\")}\n//                     >\n//                         <ListItemText primary={'符計算一覧'} />\n//                     </ListItem>\n//                     <ListItem\n//                         button\n//                         key={'計算表'}\n//                         onClick={() => onClick(\"/scoretable\")}\n//                     >\n//                         <ListItemText primary={'計算表'} />\n//                     </ListItem>\n//                 </List>\n//             </Drawer>\n//         </div>\n//     );\n\n// }\n\n// Nav.propTypes = {\n//     onClick: PropTypes.func.isRequired\n// };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Grid from 'material-ui/Grid';\n\nexport default class Yaku extends React.Component {\n\n    render() {\n        return (\n            <Grid item xs={3}>\n                <Card\n                    key={this.props.name}\n                    style={{ maxWidth: '500px', maxHeight: '200px', margin: '32px auto' }}\n                >\n                    <CardContent>\n                        <Typograpy type=\"title\">{this.props.name}</Typograpy>\n                        <p>{this.props.text}</p>\n                    </CardContent>\n                </Card>\n            </Grid>)\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport Yaku from \"./Yaku\"\n\nexport default class YakuList extends React.Component {\n\n    // componentWillUnmount() {\n    //     console.log(\"maybe\");\n    // }\n\n    // componentWillReceiveProps(nextProps) {\n    //     if (this.props.categoryId !== nextProps.categoryId) {\n    //         this.props.onUpdate(nextProps.categoryId);\n    //     }\n    // }\n\n    render() {\n        return (\n            <div ref={this.wrapper}>\n                <h2>役一覧</h2>\n                <div>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>1翻</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Yaku name=\"平和\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"リーチ\" text=\"リーチしたときにつく役\" />\n                        <Yaku name=\"一発\" text=\"立直の宣言後一巡目までにアガる\" />\n                        <Yaku name=\"門前清自摸和\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"役牌\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"断么九\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"一盃口\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"海底撈月\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"河底撈魚\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"嶺上開花\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"槍槓\" text=\"平和なときにつく役\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>2翻</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Yaku name=\"ダブル立直\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"三色同順\" text=\"リーチしたときにつく役\" />\n                        <Yaku name=\"三色同刻\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"三暗刻\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"一気通貫\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"七対子\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"対々和\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"混全帯幺九\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"三槓子\" text=\"平和なときにつく役\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>3翻</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Yaku name=\"二盃口\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"純全帯公九\" text=\"リーチしたときにつく役\" />\n                        <Yaku name=\"混一色\" text=\"平和なときにつく役\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>4翻</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Yaku name=\"小三元\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"混老頭\" text=\"リーチしたときにつく役\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>6翻</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Yaku name=\"清一色\" text=\"平和なときにつく役\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>役満</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Yaku name=\"四暗刻\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"大三元\" text=\"リーチしたときにつく役\" />\n                        <Yaku name=\"国士無双\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"緑一色\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"字一色\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"清老頭\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"四槓子\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"小四喜\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"九蓮宝燈\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"地和\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"天和\" text=\"平和なときにつく役\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy>ダブル役満</Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Yaku name=\"四暗刻単騎\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"国士無双13面待ち\" text=\"リーチしたときにつく役\" />\n                        <Yaku name=\"純正九蓮宝燈\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"發なし緑一色\" text=\"平和なときにつく役\" />\n                        <Yaku name=\"大四喜\" text=\"平和なときにつく役\" />\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import { connect } from 'react-redux';\nimport YakuList from '../components/YakuList';\n// import { addHan, addFu } from '../actions/Score';\n\nconst mapStateToProps = (state, ownProps) => ({\n    // han: state.Score.han,\n    // fu: state.Score.fu,\n    // score: state.Score.score,\n    // error: state.Score.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n    // addHan(han) { dispatch(addHan({ han })); },\n    // addHu(fu) { dispatch(addFu({ fu })); }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YakuList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardContent } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Grid from 'material-ui/Grid';\n\nexport default class Fu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.bgc = this.setBgc(props.fu)\n        this.style = { maxWidth: '500px', maxHeight: '200px', margin: '32px auto', backgroundColor: this.bgc }\n    }\n\n    setBgc = (fu) => {\n        if (fu === \"2\") {\n            return \"#eeffff\"\n        } else if (fu === \"4\") {\n            return \"#ffffee\"\n        } else if (fu === \"8\") {\n            return \"#effefe\"\n        } else if (fu === \"10\") {\n            return \"#ffeffe\"\n        } else if (fu === \"16\") {\n            return \"#feeffe\"\n        } else if (fu === \"32\") {\n            return \"#effffe\"\n        } else {\n            return \"#ffffff\"\n        }\n    }\n\n    render() {\n        return (\n            <Grid item xs={3}>\n                <Card\n                    key={this.props.name}\n                    style={this.style}\n                >\n                    <CardContent>\n                        <Typograpy type=\"title\">{this.props.name} {this.props.fu}符</Typograpy>\n                        <p>{this.props.text}</p>\n                    </CardContent>\n                </Card>\n            </Grid>\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport Fu from \"./Fu\"\n\nexport default class FuList extends React.Component {\n\n    // componentWillUnmount() {\n    //     console.log(\"maybe\");\n    // }\n\n    // componentWillReceiveProps(nextProps) {\n    //     if (this.props.categoryId !== nextProps.categoryId) {\n    //         this.props.onUpdate(nextProps.categoryId);\n    //     }\n    // }\n\n    render() {\n        return (\n            <div ref={this.wrapper}>\n                <h2>符計算</h2>\n                <div>\n                    <Grid container spacing={10}>\n                        <Typograpy><h1>基礎点</h1></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Fu name=\"基礎点\" text=\"アガれば必ず付く\" fu=\"20\" />\n                        <Fu name=\"ピンフツモ\" text=\"アガれば必ず付く\" fu=\"20\" />\n                        <Fu name=\"七対子\" text=\"アガれば必ず付く\" fu=\"20\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h1>アガり方</h1></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Fu name=\"面前ロン\" text=\"鳴いていない状態でロンアガリ\" fu=\"10\" />\n                        <Fu name=\"ツモ\" text=\"自分で引いて上がる\" fu=\"2\" />\n                        <Fu name=\"鳴いてロン\" text=\"鳴いた状態でロンアガリ\" fu=\"0\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h1>面子の種類</h1></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>数牌</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Fu name=\"順子\" text=\"鳴いても鳴かなくても順子\" fu=\"2\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>2 ～8 の中張牌</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Fu name=\"明刻1\" text=\"鳴いて作った刻子\" fu=\"2\" />\n                        <Fu name=\"暗刻1\" text=\"鳴かないで作った刻子\" fu=\"4\" />\n                        <Fu name=\"明槓1\" text=\"鳴いて作った槓\" fu=\"8\" />\n                        <Fu name=\"暗槓1\" text=\"鳴かないで作った槓\" fu=\"16\" />\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Typograpy><h2>1・9・字牌の幺九牌</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Fu name=\"明刻\" text=\"鳴いて作った刻子\" fu=\"4\" />\n                        <Fu name=\"暗刻\" text=\"鳴かないで作った刻子\" fu=\"8\" />\n                        <Fu name=\"明槓\" text=\"鳴いて作った槓\" fu=\"16\" />\n                        <Fu name=\"暗槓\" text=\"鳴かないで作った槓\" fu=\"32\" />\n                    </Grid>\n\n                    <Grid container spacing={10}>\n                        <Typograpy><h1>雀頭の牌の種類</h1></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Fu name=\"数牌\" text=\"各数牌\" fu=\"0\" />\n                        <Fu name=\"オタ風牌\" text=\"役がつかない字牌\" fu=\"0\" />\n                        <Fu name=\"自風牌\" text=\"現在の局における自分の風の風牌\" fu=\"2\" />\n                        <Fu name=\"場風牌\" text=\"現在の局における場と同じ風牌\" fu=\"2\" />\n                        <Fu name=\"三元牌\" text=\"白・発・中のいずれか\" fu=\"2\" />\n                    </Grid>\n                    <Grid containerf spacing={10}>\n                        <Typograpy><h2>待ち形の種類</h2></Typograpy>\n                    </Grid>\n                    <Grid container spacing={10}>\n                        <Fu name=\"両面待ち\" text=\"両面待ち\" fu=\"0\" />\n                        <Fu name=\"シャンポン待ち\" text=\"シャンポン待ち\" fu=\"2\" />\n                        <Fu name=\"ペンチャン待ち\" text=\"ペンチャン待ち\" fu=\"2\" />\n                        <Fu name=\"カンチャン待ち\" text=\"カンチャン待ち\" fu=\"2\" />\n                        <Fu name=\"単騎待ち\" text=\"単騎待ち\" fu=\"2\" />\n                        <Fu name=\"ノベタン\" text=\"ノベタン\" fu=\"2\" />\n                        <Fu name=\"多面待ち\" text=\"両面待ち以外に解釈できれば2符\" fu=\"0or2\" />\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}","import { connect } from 'react-redux';\nimport FuList from '../components/FuList';\n// import { addHan, addFu } from '../actions/Score';\n\nconst mapStateToProps = (state, ownProps) => ({\n    // han: state.Score.han,\n    // fu: state.Score.fu,\n    // score: state.Score.score,\n    // error: state.Score.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n    // addHan(han) { dispatch(addHan({ han })); },\n    // addHu(fu) { dispatch(addFu({ fu })); }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FuList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport { createStore } from 'redux'\nimport scoreReducer from '../reducers/Score'\nimport { addFu } from '../actions/Score';\nimport { store } from '../index'\nimport Table, { TableBody, TableRow, TableHead, TableRowColumn, TableHeaderColumn, TableCell } from 'material-ui/Table';\nimport { Paper } from 'material-ui/Paper'\n\n\nexport default class CulcTableRow extends React.Component {\n\n    score = (han) => {\n        var fu = Number(this.props.fu);\n        if (han >= 600) {\n            return 32000 * 6 / 4\n        } else if (han >= 500) {\n            return 32000 * 5 / 4\n        } else if (han >= 400) {\n            return 32000 * 4 / 4\n        } else if (han >= 300) {\n            return 32000 * 3 / 4\n        } else if (han >= 200) {\n            return 32000 * 2 / 4\n        } else if (han >= 100) {\n            return 32000 * 1 / 4\n        } else if (han >= 13) {\n            return 32000 * 1 / 4\n        } else if (han >= 11) {\n            return 24000 * 1 / 4\n        } else if (han >= 8) {\n            return 16000 * 1 / 4\n        } else if (han >= 6) {\n            return 12000 * 1 / 4\n        } else if (han >= 5) {\n            return 8000 * 1 / 4\n        } else {\n            return fu * Math.pow(2, han + 2)\n        }\n    }\n    render() {\n        return (\n            <TableRow key={this.props.fu + this.props.role}>\n                <TableCell component=\"th\" scope=\"row\" style={{ backgroundColor: \"#eeeeee\", color: \"#000000\" }}>{this.props.fu}符</TableCell>\n\n                {(() => {\n                    const han = [1, 2, 3, 4];\n                    const listItems = han.map((number) => {\n                        if (((number === 3 && Number(this.props.fu) >= 70)) || (number === 4 && Number(this.props.fu) >= 40)) {\n                            return (\n                                < TableCell align=\"center\" style={{ backgroundColor: \"#ffffff\", width: \"20%\" }}>\n                                    {(() => {\n                                        if (this.props.role === \"child\") {\n                                            return <span>満貫</span>\n                                        } else {\n                                            return <span>満貫</span>\n                                        }\n                                    })()}\n                                </TableCell>\n                            );\n                        } else if (Number(this.props.fu) <= 25 && number === 1) {\n                            return (\n                                < TableCell align=\"center\" style={{ backgroundColor: \"#ffffff\", width: \"20%\" }}>\n                                    {(() => {\n                                        if (this.props.role === \"child\") {\n                                            return <span>-<br />-</span>\n                                        } else {\n                                            return <span>-<br />-</span>\n                                        }\n                                    })()}\n                                </TableCell>\n                            );\n                        } else {\n                            return (\n                                < TableCell align=\"center\" style={{ backgroundColor: \"#ffffff\", width: \"20%\" }}>\n                                    {(() => {\n                                        if (this.props.role === \"child\") {\n                                            return (\n                                                <span>\n                                                    {Math.ceil(this.score(number) * 4 / 100) * 100} <br />\n                                                    ({Math.ceil(this.score(number) * 2 / 100) * 100}/{Math.ceil(this.score(number) / 100) * 100})\n                                                </span>\n                                            );\n                                        } else {\n                                            return (\n                                                <span>{Math.ceil(this.score(number) * 6 / 100) * 100} <br />({Math.ceil(this.score(number) * 2 / 100) * 100})</span>\n                                            );\n                                        }\n                                    })()}\n                                </TableCell>\n                            );\n                        }\n                    })\n                    return listItems;\n                })()}\n            </TableRow >\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typograpy from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\nimport Grid from 'material-ui/Grid';\nimport { Checkbox, FormControlLabel } from 'material-ui';\nimport { Switch, GridListTile, GridList, Typography } from 'material-ui';\nimport { createStore } from 'redux'\nimport scoreReducer from '../reducers/Score'\nimport { addFu } from '../actions/Score';\nimport { store } from '../index'\nimport Table, { TableBody, TableRow, TableHead, TableRowColumn, TableHeaderColumn, TableCell } from 'material-ui/Table';\nimport { Paper } from 'material-ui/Paper'\nimport CulcTableRow from './CulcTableRow';\nimport Tabs, { Tab } from 'material-ui/Tabs'\n// import { Box } from 'material-ui/Box';\n\n\nexport default class CulcTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: 0 }\n    }\n\n    culcBaseScore = () => {\n        var han = Number((store.getState()).Score.han);\n        var fu = Math.ceil(Number((store.getState()).Score.fu) / 10) * 10;\n        if (han >= 600) {\n            return 32000 * 6 / 4\n        } else if (han >= 500) {\n            return 32000 * 5 / 4\n        } else if (han >= 400) {\n            return 32000 * 4 / 4\n        } else if (han >= 300) {\n            return 32000 * 3 / 4\n        } else if (han >= 200) {\n            return 32000 * 2 / 4\n        } else if (han >= 100) {\n            return 32000 * 1 / 4\n        } else if (han >= 13) {\n            return 32000 * 1 / 4\n        } else if (han >= 11) {\n            return 24000 * 1 / 4\n        } else if (han >= 8) {\n            return 16000 * 1 / 4\n        } else if (han >= 6) {\n            return 12000 * 1 / 4\n        } else if (han >= 5) {\n            return 8000 * 1 / 4\n        } else {\n            var result = (store.getState()).Score.yakus.some(function (value) {\n                return value === \"七対子\";\n            });\n            if (result) {\n                fu = 25\n            }\n            return fu * Math.pow(2, han + 2)\n        }\n    }\n\n    handleChange = (event, newValue) => {\n        if (this.state.value !== newValue) {\n            this.setState({ value: newValue })\n            console.log(event, newValue);\n        }\n    };\n\n    render() {\n        return (\n            <div style={{ height: \"100%\" }}>\n                <Tabs value={this.state.value}\n                    onChange={this.handleChange}\n                    aria-label=\"simple tabs example\"\n                    style={{ height: \"100%\" }}\n                    selectionFollowsFocus=\"true\"\n                    textColor=\"primary\"\n                    indicatorColor=\"primary\"\n\n                >\n                    <Tab label=\"子の点数\" id=\"0\" aria-controls=\"simple-tabpanel-$0\" />\n                    <Tab label=\"親の点数\" id=\"1\" aria-controls=\"simple-tabpanel-$1\" />\n                </Tabs>\n\n                <div\n                    role=\"tabpanel\"\n                    hidden={this.state.value !== 0}\n                    id=\"simple-tabpanel-$0\"\n                    aria-labelledby=\"simple-tab-$0\"\n                >\n                    <Table aria-label=\"simple table\" style={{ height: \"100%\" }}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={{ backgroundColor: \"#bbbbbb\", color: \"#000000\" }}>ロン<br />(ツモ 親/子)</TableCell>\n                                <TableCell align=\"center\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>1翻</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>2翻</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>3翻</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>4翻</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {(() => {\n                                const fu = [20, 25, 30, 40, 50, 60, 70, 80, 90, 100, 110];\n                                const ChildListItems = fu.map((number) =>\n                                    <CulcTableRow fu={number} role=\"child\" />\n                                );\n                                return ChildListItems;\n                            })()}\n                        </TableBody>\n                    </Table>\n\n                    <Table aria-label=\"simple table\" style={{ backgroundColor: \"#ffffff\", height: \"100%\", paddingTop: 2 }}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={{ backgroundColor: \"#bbbbbb\", color: \"#000000\" }}>ロン<br />(ツモ 親/子)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>満貫<br />(3/4/5翻)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>跳満<br />(6/7翻)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>倍満<br />(8/9/10翻)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>三倍満<br />(11/12翻)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>役満<br />(13翻~)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>N倍役満</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell style={{ backgroundColor: \"#eeeeee\", color: \"#000000\" }}>符に関係なく一定</TableCell>\n                                <TableCell align=\"center\">8000<br />(4000/2000)</TableCell>\n                                <TableCell align=\"right\">12000<br />(6000/3000)</TableCell>\n                                <TableCell align=\"right\">16000<br />(8000/4000)</TableCell>\n                                <TableCell align=\"right\">24000<br />(12000/6000)</TableCell>\n                                <TableCell align=\"right\">32000<br />(16000/8000)</TableCell>\n                                <TableCell align=\"right\">32000*N<br />(16000*N/8000*N)</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n\n                </div>\n\n                <div\n                    role=\"tabpanel\"\n                    hidden={this.state.value !== 1}\n                    id=\"simple-tabpanel-$0\"\n                    aria-labelledby=\"simple-tab-$1\"\n                >\n                    <Table aria-label=\"simple table\" style={{ backgroundColor: \"#ffffff\", height: \"100%\" }}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={{ backgroundColor: \"#bbbbbb\", color: \"#000000\" }}>ロン<br />(ツモ)</TableCell>\n                                <TableCell align=\"center\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>1翻</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>2翻</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>3翻</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>4翻</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {(() => {\n                                const fu = [20, 25, 30, 40, 50, 60, 70, 80, 90, 100, 110];\n                                const listItems = fu.map((number) =>\n                                    <CulcTableRow fu={number} role=\"parent\" />\n                                );\n                                return listItems;\n                            })()}\n                        </TableBody>\n                    </Table>\n                    <Table aria-label=\"simple table\" style={{ backgroundColor: \"#ffffff\", height: \"100%\" }}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={{ backgroundColor: \"#bbbbbb\", color: \"#000000\" }}>ロン<br />(ツモ)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>満貫<br />(3/4/5翻)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>跳満<br />(6/7翻)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>倍満<br />(8/9/10翻)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>三倍満<br />(11/12翻)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>役満<br />(13翻~)</TableCell>\n                                <TableCell align=\"right\" style={{ backgroundColor: \"#cccccc\", color: \"#000000\" }}>N倍役満</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell style={{ backgroundColor: \"#eeeeee\", color: \"#000000\" }}>符に関係なく一定</TableCell>\n                                <TableCell align=\"center\">12000<br />(4000)</TableCell>\n                                <TableCell align=\"right\">18000<br />(6000)</TableCell>\n                                <TableCell align=\"right\">24000<br />(8000)</TableCell>\n                                <TableCell align=\"right\">36000<br />(12000)</TableCell>\n                                <TableCell align=\"right\">48000<br />(16000)</TableCell>\n                                <TableCell align=\"right\">48000*N<br />(16000*N)</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </div>\n            </div >\n        );\n    }\n}","import { connect } from 'react-redux';\nimport CulcTable from '../components/CulcTable';\n// import { addHan, addFu } from '../actions/Score';\n\nconst mapStateToProps = (state, ownProps) => ({\n    // han: state.Score.han,\n    // fu: state.Score.fu,\n    // score: state.Score.score,\n    // error: state.Score.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n    // addHan(han) { dispatch(addHan({ han })); },\n    // addHu(fu) { dispatch(addFu({ fu })); }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CulcTable);","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Nav from '../containers/Nav'\n// import { ListItem, ListItemText } from 'material-ui';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PersistentDrawerLeft() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        麻雀得点計算\n                     </Typography>\n                </Toolbar>\n            </AppBar>\n\n\n            <SwipeableDrawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <Nav />\n            </SwipeableDrawer>\n        </div>\n    );\n}","import { connect } from 'react-redux';\nimport HeaderAndNav from '../components/HeaderAndNav';\n// import { addHan, addFu } from '../actions/Score';\n\nconst mapStateToProps = (state, ownProps) => ({\n    // han: state.Score.han,\n    // fu: state.Score.fu,\n    // score: state.Score.score,\n    // error: state.Score.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n    // addHan(han) { dispatch(addHan({ han })); },\n    // addHu(fu) { dispatch(addFu({ fu })); }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderAndNav);","// import React, { Component } from 'react';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n// import Score from './containers/Score';\n// import Nav from './containers/Nav';\n// import Reboot from 'material-ui/Reboot';\n// import AppBar from 'material-ui/AppBar';\n// import Toolbar from 'material-ui/Toolbar';\n// import Typography from 'material-ui/Typography';\n// import YakuList from './containers/YakuList';\n// import FuList from './containers/FuList';\n// import CulcTable from './containers/CulcTable';\n// // import HomeIcon from '@material-ui/icons/Home';\n// import HeaderAndNav from './containers/HeaderAndNav'\n// // import HeaderAndNav from './components/HeaderAndNav'\n\n// class App extends Component {\n\n//   render() {\n//     return (\n//       // <div className=\"App\" style={{ paddingLeft: 240 }}>\n//       <div className=\"App\">\n//         <Reboot />\n//         <HeaderAndNav />\n\n//         {/* <AppBar style={{ left: 240 }}>\n//           <Toolbar>\n//             <IconButton style={{ color: \"#ffffff\" }}>\n//               <MenuIcon />\n//             </IconButton>\n//             <Typography type=\"title\" color=\"inherit\">\n//               麻雀得点計算\n//           </Typography>\n//           </Toolbar>\n//         </AppBar> */}\n\n//         {/* <SwipeableDrawer\n//         anchor=\"left\"\n//       >\n//         <Nav />\n//       </SwipeableDrawer> */}\n//         {/* <Nav /> */}\n\n//         <div style={{ marginTop: 50, padding: 32 }}>\n//           <Switch>\n//             <Route path=\"/\" component={Score} />\n//             <Route path=\"/yaku\" component={YakuList} />\n//             <Route path=\"/fu\" component={FuList} />\n//             {/* <Route path=\"/scoretable\" component={CulcTable} /> */}\n//           </Switch>\n//         </div>\n//       </div >\n//     );\n//   };\n// }\n\n// export default App;\n\n\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Score from './containers/Score';\nimport Nav from './containers/Nav';\nimport Reboot from 'material-ui/Reboot';\n// import AppBar from 'material-ui/AppBar';\n// import Toolbar from 'material-ui/Toolbar';\n// import Typography from 'material-ui/Typography';\nimport YakuList from './containers/YakuList';\nimport FuList from './containers/FuList';\nimport CulcTable from './containers/CulcTable';\n// import HomeIcon from '@material-ui/icons/Home';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import IconButton from '@material-ui/core/IconButton';\nimport HeaderAndNav from './containers/HeaderAndNav'\n// import SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nclass App extends Component {\n  // constructor() {\n  //   super();\n  //   this.state = { open: true }\n  //   console.log(this.state.open);\n  // }\n\n  // Open() {\n  //   if (!this.state.open) {\n  //     return this.setState({ open: true })\n  //   }\n\n  // };\n\n  // Close() {\n  //   if (this.state.open) {\n  //     this.setState({ open: false })\n  //   }\n\n  // };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Reboot />\n        <HeaderAndNav />\n        {/* <Nav /> */}\n\n        <div style={{ marginTop: 50, padding: 32 }}>\n          <Switch>\n            <Route exact path=\"/\" component={Score} />\n            <Route exact path=\"/yaku\" component={YakuList} />\n            <Route exact path=\"/fu\" component={FuList} />\n            <Route exact path=\"/scoretable\" component={CulcTable} />\n          </Switch>\n        </div>\n      </div >\n    );\n  };\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    createStore as reduxCreateStore,\n    // combineReducers,\n    applyMiddleware,\n    compose\n} from 'redux';\n\nimport {\n    // routerReducer,\n    routerMiddleware\n} from 'connected-react-router';\nimport { createRootReducer } from './reducers';\nimport { createBrowserHistory } from 'history';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nexport const history = createBrowserHistory();\n\nexport function configureStore(preloadedState) {\n    const store = reduxCreateStore(\n        createRootReducer(history), // root reducer with router state\n        preloadedState,\n        compose(\n            applyMiddleware(\n                routerMiddleware(history), // for dispatching history actions\n                logger,\n                thunk,\n                // ... other middlewares ...\n            ),\n        ),\n    );\n    return store;\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n// import { createBrowserHistory } from 'history';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureStore, history } from './createStore';\nexport const store = configureStore();\n\nfunction renderApp(store) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <App />\n        </ConnectedRouter>\n      </Provider>\n    </React.StrictMode >,\n    document.getElementById('root')\n  );\n}\nstore.subscribe(() => renderApp(store));\nrenderApp(store)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { default as Score } from './Score';\n\nexport const createRootReducer = (history) =>\n    combineReducers({\n        router: connectRouter(history),\n        Score,\n    });\n\nexport { Score };"],"sourceRoot":""}